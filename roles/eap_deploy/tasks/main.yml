---
# tasks file for mta_deploy

- name: Print the gateway for each host when defined
  ansible.builtin.debug:
    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}
  when: ansible_default_ipv4.gateway is defined

- name: Display all variables/facts known for a host
  ansible.builtin.debug:
    var: hostvars[inventory_hostname]
    verbosity: 4

- name: Install the latest version of Apache and Java
  ansible.builtin.dnf:
    name:
      - httpd
      - java
    state: latest

- name: Download and unarchive the migration toolkit
  ansible.builtin.unarchive:
    src: "{{ eap_download_url }}"
    dest: "{{ eap_archive_dest }}"
    remote_src: yes

- name: Create a systemd unit file for migration toolkit
  ansible.builtin.template:
    src: templates/eap.service.j2
    dest: /lib/systemd/system/eap.service

- name: Just force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Make sure mta service unit is running
  ansible.builtin.systemd:
    state: started
    name: eap.service
    enabled: yes

- name: Configure Apache port redirection
  ansible.builtin.template:
    src: templates/vhost.conf.j2
    dest: /etc/httpd/conf.d/vhost.conf

- name: Run a configuration file syntax test for Apache
  ansible.builtin.shell: /usr/sbin/apachectl configtest

- name: Make sure httpd service unit is running
  ansible.builtin.systemd:
    state: started
    name: httpd.service
    enabled: yes

- name: Permit traffic in default zone for http service
  ansible.posix.firewalld:
    service: http
    permanent: yes
    state: enabled

- name: Set httpd_can_network_connect flag on and persist across reboots
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Wait for server to restart
  reboot:
    reboot_timeout: 3600

- name: Get uptime information
  ansible.builtin.shell: /usr/bin/uptime
  register: result

- name: Print return information from the previous task
  ansible.builtin.debug:
    var: result
    verbosity: 2


#######################################################################################

---

- name: Install Java 1.7 and some basic dependencies
  yum:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
   - unzip
   - java-1.7.0-openjdk
   - libselinux-python
   - libsemanage-python

- name: Download JBoss from jboss.org
  get_url:
    url: http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip
    dest: /opt/jboss-as-7.1.1.Final.zip
  become: true

- name: Extract archive
  unarchive:
    dest: /usr/share
    src: /opt/jboss-as-7.1.1.Final.zip
    creates: /usr/share/jboss-as
    copy: no
  become: true

  # Rename the dir to avoid encoding the version in the init script
- name: Rename install directory
  command: chdir=/usr/share /bin/mv jboss-as-7.1.1.Final jboss-as creates=/usr/share/jboss-as
  become: true

- name: Copying standalone.xml configuration file
  template:
    src: standalone.xml
    dest: /usr/share/jboss-as/standalone/configuration/
  become: true
  notify: restart jboss

- name: Add group 'jboss'
  group:
    name: jboss
  become: true

- name: Add user 'jboss'
  user:
    name: jboss
    group: jboss
    home: /usr/share/jboss-as
  become: true

- name: Change ownership of JBoss installation
  file:
    path: /usr/share/jboss-as/
    owner: jboss
    group: jboss
    state: directory
    recurse: yes
  become: true

- name: Copy the init script
  copy:
    src: jboss-as-standalone.sh
    dest: /etc/init.d/jboss
    mode: 0755
  become: true

- name: Workaround for systemd bug
  shell: service jboss start && chkconfig jboss on
  become: true
  ignore_errors: yes

- name: Enable JBoss to be started at boot
  service:
    name: jboss
    enabled: yes
    state: started
  become: true

- name: Deploy iptables rules
  template:
    src: iptables-save
    dest: /etc/sysconfig/iptables
  become: true
  when: ansible_distribution_major_version != "7"
  notify: restart iptables

- name: Ensure that firewalld is installed
  yum:
    name: firewalld
    state: present
  become: true
  when: ansible_distribution_major_version == "7"

- name: Ensure that firewalld is started
  service:
    name: firewalld
    state: started
  become: true
  when: ansible_distribution_major_version == "7"

- name: deploy firewalld rules
  firewalld:
    immediate: yes
    port: "{{ item }}"
    state: enabled
    permanent: yes
  become: true
  when: ansible_distribution_major_version == "7"
  with_items:
  - "{{ http_proxy_port }}/tcp"
  - "{{ https_proxy_port }}/tcp"